#!/bin/sh

usage_msg() {
  echo -e "USAGE: $0 filename\nfilename : line by line db file - each entry must be separated with a blank line\nresult : 1 line by record, order by field name" >&2; exit 1
}

check_type() {
if ! [ -e $1 ]
  then
    echo -e "ERROR: $1 : file not found" >&2; exit 1
fi

if ! [ -f $1 ]
    then
    echo -e "ERROR: $1 is not a file" >&2; exit 1
fi

if ! [ -w $1 ] 
then
   echo -e "ERROR: $1 is not writable" >&2; exit 1
fi
}

check_existing_category() {


  category=("${!1}")

  for var in "${category[@]}"
  do
    if [[ "$var" == "$2" ]]
      then

      return 1
    fi
  done
  return 0
}

db() {

  i=0
  nb_value=0
  nb_blank_line=0
  n_category=0
  data_file=""
  new_category=""

  while IFS='' read -r line || [[ -n "$line" ]]
  do

    if [[ "$line" == *" : "* ]]
      then

      pos=`echo $line | grep -bo " : " | sed 's/:.*$//'`
      new_category=`echo $line | cut -c-$pos`

      pos=`echo $line | grep -bo " : " | sed 's/:.*$//'`
      pos=$(($pos + 4))
      value=`echo $line | cut -c$pos-`

      value_associated[$i]="$value"
      category_associated[$i]="$new_category"
      i=$(($i + 1))

      if check_existing_category category[@] $new_category;
        then

        category[$n_category]=$new_category
        n_category=$(($n_category + 1))

      fi
      nb_value=$(($nb_value + 1))
    fi

    if [[ "$line" == "" ]]
      then
      nb_in_line[$nb_blank_line]=$nb_value
      nb_blank_line=$(($nb_blank_line + 1))
      nb_value=0
    fi

  done < "$1"

  nb_in_line[$nb_blank_line]=$nb_value
  nb_blank_line=$(($nb_blank_line + 1))
  category=($(for var in ${category[@]}; do echo $var; done | sort))

  final_answer=""

  i=0
  n=0
  x=0
  j=0
  y=${nb_in_line[0]}

  while [ $x -lt $nb_blank_line ]
  do
    while [ $n -lt ${nb_in_line[$i]} ]
    do
      for var in ${category[@]}
      do
        final_answer="$final_answer$var : "
        if [ $i == 0 ]
          then
            j=0
          else
            j=$(($y - ${nb_in_line[$i]}))
        fi
        while [ $j -lt $y ]
        do
          if [ "$var" == ${category_associated[$j]} ]
            then
            final_answer="$final_answer${value_associated[$j]}"
            break
          fi
          j=$(($j + 1))
        done
        if ! [ "$var" == "${category[-1]}" ]
          then
          final_answer="$final_answer / "
        fi
        n=$(($n + 1))
      done
    done
    i=$(($i + 1))
    if [ ${#nb_in_line[*]} != $i ]
      then
      y=$(($y + ${nb_in_line[$i]}))
    fi
    x=$(($x + 1))
    if [ $x -lt $nb_blank_line ]
      then
      final_answer="$final_answer\n"
    fi
    n=0
  done

  echo -e "$final_answer" > "$1"
}

if [ $# -ne 1 ]
  then
  usage_msg
fi

check_type $1
db $1

exit 0